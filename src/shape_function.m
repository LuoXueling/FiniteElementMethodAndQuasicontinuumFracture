function [N,pNpxi,pNpeta,pNpzeta]=shape_function(meshInfo)
% Shape functions for different types of element.
% Because all the shape functions are integrated, Gauss integral allows
% pre-compute shape functions on Gauss points instead of symbolic
% expression.
% For 1 Gauss points, the shape function for displacement Ndisp is a 2x8
% matrix. Pre-compute shape functions and combine them into a 8x8 matrix.
% For phase field, combined Nphi is a 4x4 matrix.
% 
% Ndisp(2x8), Nphi(4x1), Bdisp(2x8), Bphi(4x1) are needed, and the later 
% two depend on physical coord given in function supMatrix.
% Ndisp is needed only for computing mass matrix which is diag by 
% calculating sum of rows, so Ndisp doesn't need to be (2x8)

% introduction for elements: https://web.mit.edu/calculix_v2.7/CalculiX/ccx_2.7/doc/ccx/node33.html
% http://130.149.89.49:2080/v6.10/books/usb/default.htm?startat=pt06ch25s01ael03.html
% shape function https://abaqus-docs.mit.edu/2017/English/SIMACAETHERefMap/simathe-c-tritetwedge.htm
% https://abaqus-docs.mit.edu/2017/English/SIMACAETHERefMap/simathe-c-solidisoquadhex.htm
% https://www.iue.tuwien.ac.at/phd/hollauer/node29.html
% integration:https://wenku.baidu.com/view/079880ac51e2524de518964bcf84b9d528ea2cad.html?rec_flag=default&fr=Recommend_RelativeRecommend-40381,60390,60273,60320,40251,40340,40355-pc_view_otherlike_new-c7dff968fd0a79563c1e72ea
% https://engcourses-uofa.ca/books/introduction-to-solid-mechanics/finite-element-analysis/one-and-two-dimensional-isoparametric-elements-and-gauss-integration/gauss-integration/
if strcmp(meshInfo.elemType,'B21')
    a=sqrt(1/3);
    points = [0,0];
    xi=points(:,1);
    eta=points(:,2);
    N=[(1-xi)/2,(1+xi)/2];
    pNpxi=[-1/2,1/2];
    pNpeta=[0,0];
    pNpzeta=[0,0];

elseif strcmp(meshInfo.elemType,'CPS4R') || strcmp(meshInfo.elemType,'CPS4')
    % 1st point : (-a,-a)  2nd point : ( a,-a)
    % 3rd point : ( a, a)  4th point : (-a, a)
    a=sqrt(1/3);
    points = [-a,-a;...
               a,-a;...
               a, a;...
              -a, a;];
    xi=points(:,1);
    eta=points(:,2);
    % Row i for gauss point i
    N=[(1-xi).*(1-eta)/4,(1+xi).*(1-eta)/4,(1+xi).*(1+eta)/4,(1-xi).*(1+eta)/4];
    pNpxi=[(eta-1)/4, (1-eta)/4,(1+eta)/4,-(1+eta)/4];
    pNpeta=[(xi-1)/4,-(1+xi)/4,(1+xi)/4, (1-xi)/4];
    pNpzeta=[];
elseif strcmp(meshInfo.elemType,'CPS3')
    % ref: https://link.springer.com/content/pdf/bbm%3A978-3-540-32609-0%2F1.pdf
    points = [1/3,1/3];
    xi=points(:,1);
    eta=points(:,2);
    % ref: https://kratos-wiki.cimne.upc.edu/index.php/Two-dimensional_Shape_Functions
    N=[1-xi-eta,xi,eta];
    pNpxi=[-1,1,0];
    pNpeta=[-1,0,1];
    pNpzeta=[];
%     % ref: https://link.springer.com/content/pdf/bbm%3A978-3-540-32609-0%2F1.pdf
%     points = [1/6,1/6;
%               2/3,1/6;
%               1/6,2/3];
%     xi=points(:,1);
%     eta=points(:,2);
%     % ref: https://kratos-wiki.cimne.upc.edu/index.php/Two-dimensional_Shape_Functions
%     N=[1-xi-eta,xi,eta];
%     pNpxi=[-1,1,0;
%            -1,1,0;
%            -1,1,0];
%     pNpeta=[-1,0,1;
%             -1,0,1;
%             -1,0,1];
%     pNpzeta=[];
elseif strcmp(meshInfo.elemType,'C3D4')
    points = [1/4,1/4,1/4];
    xi=points(:,1);
    eta=points(:,2);
    zeta=points(:,3);
    N=[1-xi-eta-zeta,xi,eta,zeta];
    pNpxi=[-1,1,0,0];
    pNpeta=[-1,0,1,0];
    pNpzeta=[-1,0,0,1];
%     points = [0.58541020,0.13819660,0.13819660;
%               0.13819660,0.58541020,0.13819660;
%               0.13819660,0.13819660,0.58541020;
%               0.13819660,0.13819660,0.13819660];
%     xi=points(:,1);
%     eta=points(:,2);
%     zeta=points(:,3);
%     N=[1-xi-eta-zeta,xi,eta,zeta];
%     pNpxi=[-1,1,0,0;
%            -1,1,0,0;
%            -1,1,0,0;
%            -1,1,0,0];
%     pNpeta=[-1,0,1,0;
%            -1,0,1,0;
%            -1,0,1,0;
%            -1,0,1,0];
%     pNpzeta=[-1,0,0,1;
%              -1,0,0,1;
%              -1,0,0,1;
%              -1,0,0,1];
elseif strcmp(meshInfo.elemType,'C3D8')
    % https://classes.engineering.wustl.edu/2009/spring/mase5513/abaqus/docs/v6.6/books/stm/default.htm?startat=ch03s02ath62.html
    % integration point https://web.mit.edu/calculix_v2.7/CalculiX/ccx_2.7/doc/ccx/node26.html
    points=[-1/sqrt(3),-1/sqrt(3),-1/sqrt(3);...
            1/sqrt(3),-1/sqrt(3),-1/sqrt(3);...
            1/sqrt(3),1/sqrt(3),-1/sqrt(3);...
            -1/sqrt(3),1/sqrt(3),-1/sqrt(3);...
            -1/sqrt(3),-1/sqrt(3),1/sqrt(3);...
            1/sqrt(3),-1/sqrt(3),1/sqrt(3);...
            1/sqrt(3),1/sqrt(3),1/sqrt(3);...
            -1/sqrt(3),1/sqrt(3),1/sqrt(3)];
    xi=points(:,1);
    eta=points(:,2);
    zeta=points(:,3);
    N=1/8*[(1-xi).*(1-eta).*(1-zeta),...
           (1+xi).*(1-eta).*(1-zeta),...
           (1+xi).*(1+eta).*(1-zeta),...
           (1-xi).*(1+eta).*(1-zeta),...
           (1-xi).*(1-eta).*(1+zeta),...
           (1+xi).*(1-eta).*(1+zeta),...
           (1+xi).*(1+eta).*(1+zeta),...
           (1-xi).*(1+eta).*(1+zeta)];
    pNpxi=1/8*[-(1-eta).*(1-zeta),...
               (1-eta).*(1-zeta),...
               (1+eta).*(1-zeta),...
               -(1+eta).*(1-zeta),...
               -(1-eta).*(1+zeta),...
               (1-eta).*(1+zeta),...
               (1+eta).*(1+zeta),...
               -(1+eta).*(1+zeta)];
    pNpeta=1/8*[-(1-xi).*(1-zeta),...
                -(1+xi).*(1-zeta),...
                (1+xi).*(1-zeta),...
                (1-xi).*(1-zeta),...
                -(1-xi).*(1+zeta),...
                -(1+xi).*(1+zeta),...
                (1+xi).*(1+zeta),...
                (1-xi).*(1+zeta)];
    pNpzeta=1/8*[-(1-xi).*(1-eta),...
                 -(1+xi).*(1-eta),...
                 -(1+xi).*(1+eta),...
                 -(1-xi).*(1+eta),...
                 (1-xi).*(1-eta),...
                 (1+xi).*(1-eta),...
                 (1+xi).*(1+eta),...
                 (1-xi).*(1+eta)];
%     N=1/8*[(1-xi).*(1-eta).*(1-zeta),...
%            (1+xi).*(1-eta).*(1-zeta),...
%            (1-xi).*(1+eta).*(1-zeta),...
%            (1+xi).*(1+eta).*(1-zeta),...
%            (1-xi).*(1-eta).*(1+zeta),...
%            (1+xi).*(1-eta).*(1+zeta),...
%            (1-xi).*(1+eta).*(1+zeta),...
%            (1+xi).*(1+eta).*(1+zeta)];
%     pNpxi=1/8*[-(1-eta).*(1-zeta),...
%                (1-eta).*(1-zeta),...
%                -(1+eta).*(1-zeta),...
%                (1+eta).*(1-zeta),...
%                -(1-eta).*(1+zeta),...
%                (1-eta).*(1+zeta),...
%                -(1+eta).*(1+zeta),...
%                (1+eta).*(1+zeta)];
%     pNpeta=1/8*[-(1-xi).*(1-zeta),...
%                 -(1+xi).*(1-zeta),...
%                 (1-xi).*(1-zeta),...
%                 (1+xi).*(1-zeta),...
%                 -(1-xi).*(1+zeta),...
%                 -(1+xi).*(1+zeta),...
%                 (1-xi).*(1+zeta),...
%                 (1+xi).*(1+zeta)];
%     pNpzeta=1/8*[-(1-xi).*(1-eta),...
%                  -(1+xi).*(1-eta),...
%                  -(1-xi).*(1+eta),...
%                  -(1+xi).*(1+eta),...
%                  (1-xi).*(1-eta),...
%                  (1+xi).*(1-eta),...
%                  (1-xi).*(1+eta),...
%                  (1+xi).*(1+eta)];
% elseif strcmp(meshInfo.elemType=='C3D20')
%     points(1,:)=[-sqrt(3/5),-sqrt(3/5),-sqrt(3/5)];
%     points(2,:)=[0,-sqrt(3/5),-sqrt(3/5)];
%     points(3,:)=[sqrt(3/5),-sqrt(3/5),-sqrt(3/5)];
% 
%     points(4,:)=[-sqrt(3/5),0,-sqrt(3/5)];
%     points(5,:)=[0,0,-sqrt(3/5)];
%     points(6,:)=[sqrt(3/5),0,-sqrt(3/5)];
%     points(7,:)=[-sqrt(3/5),sqrt(3/5),-sqrt(3/5)];
%     points(8,:)=[0,sqrt(3/5),-sqrt(3/5)];
%     points(9,:)=[sqrt(3/5),sqrt(3/5),-sqrt(3/5)];
%     B=points(1:9,:);
%     B(:,3)=ones(9,1)*0;
%     points(10:18,:)=B;
%     B(:,3)=ones(9,1)*sqrt(3/5);
%     points(19:27,:)=B;
%     
%     xi=points(:,1);
%     eta=points(:,2);
%     zeta=points(:,3);
end
end